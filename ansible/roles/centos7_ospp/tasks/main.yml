- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80347-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-171-3.4.8
  - DISA-STIG-RHEL-07-020060

- name: Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80347-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-171-3.4.8
  - DISA-STIG-RHEL-07-020060

- name: Ensure GPG check Enabled for Local Packages (DNF)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: localpkg_gpgcheck
    value: 1
    create: true
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - ensure_gpgcheck_local_packages | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_local_packages
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-80347-8
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-171-3.4.8
  - DISA-STIG-RHEL-07-020060

- name: Check existence of yum on Fedora
  stat:
    path: /etc/yum.conf
  register: yum_config_file
  check_mode: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26989-4
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050

- name: Ensure GPG check is globally activated (yum)
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists)
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26989-4
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050

- name: Ensure GPG check is globally activated (dnf)
  ini_file:
    dest: /etc/dnf/dnf.conf
    section: main
    option: gpgcheck
    value: 1
    create: false
  when:
  - ansible_distribution == "Fedora"
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - ensure_gpgcheck_globally_activated | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - ensure_gpgcheck_globally_activated
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26989-4
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  - DISA-STIG-RHEL-07-020050

- name: Read permission of GPG key directory
  stat:
    path: /etc/pki/rpm-gpg/
  register: gpg_key_directory_permission
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Read signatures in GPG key
  command: gpg --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7"
  args:
    warn: false
  changed_when: false
  register: gpg_fingerprints
  check_mode: false
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Installed GPG Fingerprints
  set_fact:
    gpg_installed_fingerprints: '{{ gpg_fingerprints.stdout | regex_findall(''^pub.*

      (?:^fpr[:]*)([0-9A-Fa-f]*)'', ''\1'') | list }}'
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Set Fact - Valid fingerprints
  set_fact:
    gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "43A6E49C4A38F4BE9ABF2A5345689C882FA658E0")
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool

- name: Import RedHat GPG key
  rpm_key:
    state: present
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when:
  - gpg_key_directory_permission.stat.mode <= '0755'
  - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length == 0
  - gpg_installed_fingerprints | length > 0
  - ansible_distribution == "RedHat"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - ensure_redhat_gpgkey_installed | bool
  - medium_complexity | bool
  - medium_disruption | bool
  tags:
  - ensure_redhat_gpgkey_installed
  - high_severity
  - restrict_strategy
  - medium_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26957-1
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1

- name: Find All yum Repositories
  find:
    paths: /etc/yum.repos.d/
    patterns: '*.repo'
    contains: ^\[.+]$
  register: yum_find
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26876-3
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure gpgcheck Enabled For All yum Package Repositories
  with_items: '{{ yum_find.files }}'
  lineinfile:
    create: true
    dest: '{{ item.path }}'
    regexp: ^gpgcheck
    line: gpgcheck=1
  tags:
  - ensure_gpgcheck_never_disabled
  - high_severity
  - unknown_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-26876-3
  - NIST-800-53-CM-5(3)
  - NIST-800-53-CM-11(a)
  - NIST-800-53-SI-7
  - NIST-800-53-MA-1(b)
  - NIST-800-171-3.4.8
  - PCI-DSS-Req-6.2
  - CJIS-5.10.4.1
  when:
  - ensure_gpgcheck_never_disabled | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - unknown_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure dracut-fips is installed
  package:
    name: dracut-fips
    state: present
  when:
  - ansible_distribution == 'RedHat'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - enable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_dracut-fips_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80358-5
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - CJIS-5.10.1.2

- name: check prelink binary installed
  stat:
    path: /usr/sbin/prelink
  register: prelink_exists
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: disable prelink
  lineinfile:
    dest: /etc/sysconfig/prelink
    regexp: ^#?PRELINKING
    line: PRELINKING=no
  when:
  - prelink_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: revert prelinking binaries
  command: /usr/sbin/prelink -ua
  when:
  - prelink_exists.stat.exists
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: Check if system supports AES-NI
  command: grep -q -m1 -o aes /proc/cpuinfo
  failed_when: aesni_supported.rc > 1
  register: aesni_supported
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: Ensure dracut-fips-aesni is installed
  package:
    name: dracut-fips-aesni
    state: present
  when:
  - aesni_supported.rc == 0
  - ansible_distribution == 'RedHat'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: install dracut-fips
  package:
    name: dracut-fips
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: Rebuild initramfs
  command: dracut -f
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: check fips argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*fips=' /etc/default/grub
  failed_when: false
  register: fipsargcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: replace existing fips argument
  replace:
    path: /etc/default/grub
    regexp: fips=.
    replace: fips=1
  when:
  - fipsargcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: add fips argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 fips=1"
  when:
  - fipsargcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: get boot device uuid
  command: findmnt --noheadings --output uuid --target /boot
  register: bootuuid
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: check boot argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*boot=' /etc/default/grub
  failed_when: false
  register: bootargcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: replace existing boot argument
  replace:
    path: /etc/default/grub
    regexp: boot=\w*-\w*-\w*-\w*-\w*
    replace: boot={{ bootuuid.stdout }}
  when:
  - bootargcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: add boot argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 boot=UUID={{ bootuuid.stdout }}"
  when:
  - bootargcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="fips=1 boot=UUID={{ bootuuid.stdout }}"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - high_complexity | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - high_severity | bool
  - grub2_enable_fips_mode | bool
  - medium_disruption | bool
  tags:
  - grub2_enable_fips_mode
  - high_severity
  - restrict_strategy
  - high_complexity
  - medium_disruption
  - reboot_required
  - CCE-80359-3
  - NIST-800-53-IA-5
  - NIST-800-53-SC-13
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-171-3.13.8
  - NIST-800-171-3.13.11
  - CJIS-5.10.1.2
  - DISA-STIG-RHEL-07-021350

- name: Ensure SELinux State is Enforcing
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUX=
    line: SELINUX={{ var_selinux_state }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - low_disruption | bool
  - selinux_state | bool
  - low_complexity | bool
  tags:
  - selinux_state
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27334-2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)
  - NIST-800-53-AC-3(4)
  - NIST-800-53-AC-4
  - NIST-800-53-AC-6
  - NIST-800-53-AU-9
  - NIST-800-53-SI-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - DISA-STIG-RHEL-07-020210

- name: Configure SELinux Policy
  lineinfile:
    path: /etc/sysconfig/selinux
    regexp: ^SELINUXTYPE=
    line: SELINUXTYPE={{ var_selinux_policy_name }}
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - high_severity | bool
  - selinux_policytype | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - selinux_policytype
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27279-9
  - NIST-800-53-AC-3
  - NIST-800-53-AC-3(3)
  - NIST-800-53-AC-3(4)
  - NIST-800-53-AC-4
  - NIST-800-53-AC-6
  - NIST-800-53-AU-9
  - NIST-800-53-SI-6(a)
  - NIST-800-171-3.1.2
  - NIST-800-171-3.7.2
  - DISA-STIG-RHEL-07-020220

- name: Ensure sysctl fs.protected_symlinks is set to 1
  sysctl:
    name: fs.protected_symlinks
    value: '1'
    state: present
    reload: true
  tags:
  - sysctl_fs_protected_symlinks
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81029-1
  - NIST-800-53-SI-11
  when:
  - unknown_severity | bool
  - sysctl_fs_protected_symlinks | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Ensure sysctl fs.protected_hardlinks is set to 1
  sysctl:
    name: fs.protected_hardlinks
    value: '1'
    state: present
    reload: true
  tags:
  - sysctl_fs_protected_hardlinks
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81026-7
  - NIST-800-53-SI-11
  when:
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_fs_protected_hardlinks | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Unit Service Exists - autofs.service
  command: systemctl list-unit-files autofs.service
  args:
    warn: false
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-AC-19(a)
  - NIST-800-53-AC-19(d)
  - NIST-800-53-AC-19(e)
  - NIST-800-53-IA-3
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Disable service autofs
  systemd:
    name: autofs.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"autofs.service" in service_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-AC-19(a)
  - NIST-800-53-AC-19(d)
  - NIST-800-53-AC-19(e)
  - NIST-800-53-IA-3
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Unit Socket Exists - autofs.socket
  command: systemctl list-unit-files autofs.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-AC-19(a)
  - NIST-800-53-AC-19(d)
  - NIST-800-53-AC-19(e)
  - NIST-800-53-IA-3
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Disable socket autofs
  systemd:
    name: autofs.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_autofs_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_autofs_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27498-5
  - NIST-800-53-AC-19(a)
  - NIST-800-53-AC-19(d)
  - NIST-800-53-AC-19(e)
  - NIST-800-53-IA-3
  - NIST-800-171-3.4.6
  - DISA-STIG-RHEL-07-020110

- name: Ensure kernel module 'usb-storage' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/usb-storage.conf
    regexp: usb-storage
    line: install usb-storage /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - reboot_required | bool
  - low_complexity | bool
  tags:
  - kernel_module_usb-storage_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27277-3
  - NIST-800-53-AC-19(a)
  - NIST-800-53-AC-19(d)
  - NIST-800-53-AC-19(e)
  - NIST-800-53-IA-3
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.21
  - DISA-STIG-RHEL-07-020100

- name: Ensure kernel module 'cramfs' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/cramfs.conf
    regexp: cramfs
    line: install cramfs /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - low_severity | bool
  - medium_disruption | bool
  - kernel_module_cramfs_disabled | bool
  - low_complexity | bool
  tags:
  - kernel_module_cramfs_disabled
  - low_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80137-3
  - NIST-800-53-CM-7
  - NIST-800-171-3.4.6

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/home'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81047-3

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81047-3

- name: Ensure permission nodev are set on /home
  mount:
    path: /home
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_home_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81047-3

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81052-3

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81052-3

- name: Ensure permission nodev are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - mount_option_var_tmp_nodev | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81052-3

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82153-8

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82153-8

- name: Ensure permission nosuid are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - mount_option_var_tmp_nosuid | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82153-8

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80149-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80149-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nodev | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_nodev
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80149-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80154-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80154-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nosuid
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80154-8
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/var/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82150-4

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82150-4

- name: Ensure permission noexec are set on /var/tmp
  mount:
    path: /var/tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - mount_option_var_tmp_noexec | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_var_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-82150-4

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80150-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80150-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission noexec are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_tmp_noexec
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80150-6
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80153-0
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80153-0
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission noexec are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},noexec'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - mount_option_dev_shm_noexec | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_noexec
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80153-0
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/dev/shm'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80152-2
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80152-2
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nodev are set on /dev/shm
  mount:
    path: /dev/shm
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nodev'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - mount_option_dev_shm_nodev | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_dev_shm_nodev
  - medium_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80152-2
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/home'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81153-9
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2
  - DISA-STIG-RHEL-07-021000

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81153-9
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2
  - DISA-STIG-RHEL-07-021000

- name: Ensure permission nosuid are set on /home
  mount:
    path: /home
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_home_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - low_complexity | bool
  - high_disruption | bool
  tags:
  - mount_option_home_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-81153-9
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2
  - DISA-STIG-RHEL-07-021000

- name: get back mount information associated to mountpoint
  command: findmnt --fstab '/tmp'
  register: device_name
  failed_when: device_name.rc > 1
  changed_when: false
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80151-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: create mount_info dictionary variable
  set_fact:
    mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
  with_together:
  - '{{ device_name.stdout_lines[0].split() | list | lower }}'
  - '{{ device_name.stdout_lines[1].split() | list }}'
  when:
  - device_name.stdout is defined and device_name.stdout_lines is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80151-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: Ensure permission nosuid are set on /tmp
  mount:
    path: /tmp
    src: '{{ mount_info.source }}'
    opts: '{{ mount_info.options }},nosuid'
    state: mounted
    fstype: '{{ mount_info.fstype }}'
  when:
  - device_name.stdout is defined
  - (device_name.stdout | length > 0)
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - mount_option_tmp_nosuid | bool
  - no_reboot_needed | bool
  - configure_strategy | bool
  - high_disruption | bool
  - low_complexity | bool
  tags:
  - mount_option_tmp_nosuid
  - unknown_severity
  - configure_strategy
  - low_complexity
  - high_disruption
  - no_reboot_needed
  - CCE-80151-4
  - NIST-800-53-CM-7
  - NIST-800-53-MP-2

- name: check vsyscall argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*vsyscall=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82159-5

- name: replace existing vsyscall argument
  replace:
    path: /etc/default/grub
    regexp: vsyscall=.
    replace: vsyscall=none
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82159-5

- name: add vsyscall argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 vsyscall=none"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82159-5

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="vsyscall=none"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_vsyscall_argument | bool
  - low_disruption | bool
  tags:
  - grub2_vsyscall_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82159-5

- name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
  sysctl:
    name: kernel.yama.ptrace_scope
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_kernel_yama_ptrace_scope | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_yama_ptrace_scope
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81058-0

- name: Ensure sysctl kernel.kexec_load_disabled is set to 1
  sysctl:
    name: kernel.kexec_load_disabled
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_kernel_kexec_load_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_kexec_load_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-81056-4

- name: Ensure sysctl kernel.dmesg_restrict is set to 1
  sysctl:
    name: kernel.dmesg_restrict
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_kernel_dmesg_restrict | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_dmesg_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27050-4
  - NIST-800-53-SI-11
  - NIST-800-171-3.1.5

- name: Ensure sysctl kernel.kptr_restrict is set to 1
  sysctl:
    name: kernel.kptr_restrict
    value: '1'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_kernel_kptr_restrict | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_kernel_kptr_restrict
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80659-6
  - NIST-800-53-SC-39

- name: check slub_debug argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*slub_debug=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82157-9

- name: replace existing slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: slub_debug=.
    replace: slub_debug=P
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82157-9

- name: add slub_debug argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 slub_debug=P"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82157-9

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="slub_debug=P"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_slub_debug_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_slub_debug_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82157-9

- name: check page_poison argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*page_poison=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82158-7

- name: replace existing page_poison argument
  replace:
    path: /etc/default/grub
    regexp: page_poison=.
    replace: page_poison=1
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82158-7

- name: add page_poison argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 page_poison=1"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82158-7

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="page_poison=1"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - grub2_page_poison_argument | bool
  - low_disruption | bool
  tags:
  - grub2_page_poison_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82158-7

- name: disable core dumps with limits
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: ^[^#].*core
    line: '*        hard       core      0'
    create: true
  tags:
  - disable_users_coredumps
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80169-6
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - disable_users_coredumps | bool
  - restrict_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure kernel module 'dccp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/dccp.conf
    regexp: dccp
    line: install dccp /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_dccp_disabled | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_dccp_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82024-1
  - NIST-800-53-CM-7
  - NIST-800-171-3.4.6
  - CJIS-5.10.1
  - DISA-STIG-RHEL-07-020101

- name: Ensure kernel module 'sctp' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/sctp.conf
    regexp: sctp
    line: install sctp /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - kernel_module_sctp_disabled | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_sctp_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-82044-9
  - NIST-800-53-CM-7
  - NIST-800-171-3.4.6
  - CJIS-5.10.1

- name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80180-3
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv6_conf_default_accept_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80183-7
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv6_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80355-1
  - NIST-800-53-AC-4
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv6.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80182-9
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv6_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80179-5
  - NIST-800-53-AC-4
  - NIST-800-171-3.1.20
  - DISA-STIG-RHEL-07-040830

- name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
  sysctl:
    name: net.ipv6.conf.default.accept_ra
    value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv6_conf_default_accept_ra | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv6_conf_default_accept_ra
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80181-1
  - NIST-800-53-CM-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.ip_forward is set to 0
  sysctl:
    name: net.ipv4.ip_forward
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_ip_forward | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_ip_forward
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80157-1
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-32
  - NIST-800-171-3.1.20
  - DISA-STIG-RHEL-07-040740

- name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_default_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80999-6
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040650

- name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_conf_all_send_redirects | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_send_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80156-3
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5(1)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040660

- name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_all_accept_source_route | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27434-0
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - DISA-STIG-RHEL-07-040610

- name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - sysctl_net_ipv4_conf_all_rp_filter | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80167-0
  - NIST-800-53-AC-4
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.tcp_syncookies is set
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_tcp_syncookies | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_tcp_syncookies
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27495-1
  - NIST-800-53-AC-4
  - NIST-800-53-SC-5(1)(2)
  - NIST-800-53-SC-5(2)
  - NIST-800-53-SC-5(3)
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1

- name: Ensure sysctl net.ipv4.conf.all.log_martians is set
  sysctl:
    name: net.ipv4.conf.all.log_martians
    value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_log_martians | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80160-5
  - NIST-800-53-AC-17(7)
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5(3)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_redirects | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80163-9
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040640

- name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.all.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_all_secure_redirects | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80159-7
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - sysctl_net_ipv4_conf_all_accept_redirects | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_all_accept_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80158-9
  - NIST-800-53-CM-6(d)
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040641

- name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
  sysctl:
    name: net.ipv4.conf.default.rp_filter
    value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_rp_filter | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_rp_filter
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80168-8
  - NIST-800-53-AC-4
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.log_martians is set
  sysctl:
    name: net.ipv4.conf.default.log_martians
    value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - sysctl_net_ipv4_conf_default_log_martians | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_log_martians
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80161-3
  - NIST-800-53-AC-17(7)
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5(3)
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
  sysctl:
    name: net.ipv4.conf.default.accept_source_route
    value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sysctl_net_ipv4_conf_default_accept_source_route | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_accept_source_route
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80162-1
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040620

- name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
  sysctl:
    name: net.ipv4.conf.default.secure_redirects
    value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - sysctl_net_ipv4_conf_default_secure_redirects | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_conf_default_secure_redirects
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80164-7
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-53-SC-7
  - NIST-800-171-3.1.20

- name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80165-4
  - NIST-800-53-AC-4
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20
  - CJIS-5.10.1.1
  - DISA-STIG-RHEL-07-040630

- name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
  sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
    state: present
    reload: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - reboot_required | bool
  - medium_disruption | bool
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses | bool
  - low_complexity | bool
  tags:
  - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
  - unknown_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-80166-2
  - NIST-800-53-CM-7
  - NIST-800-53-SC-5
  - NIST-800-171-3.1.20

- name: Ensure kernel module 'bluetooth' is disabled
  lineinfile:
    create: true
    dest: /etc/modprobe.d/bluetooth.conf
    regexp: bluetooth
    line: install bluetooth /bin/true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - kernel_module_bluetooth_disabled | bool
  - reboot_required | bool
  - disable_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - low_complexity | bool
  tags:
  - kernel_module_bluetooth_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - medium_disruption
  - reboot_required
  - CCE-27327-6
  - NIST-800-53-AC-17(8)
  - NIST-800-53-AC-18(a)
  - NIST-800-53-AC-18(d)
  - NIST-800-53-AC-18(3)
  - NIST-800-53-CM-7
  - NIST-800-53-MP-7
  - NIST-800-171-3.1.16
  - CJIS-5.13.1.3

- name: Enable service firewalld
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service firewalld
    service:
      name: firewalld
      enabled: 'yes'
      state: started
    when:
    - '"firewalld" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - service_firewalld_enabled | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_firewalld_enabled
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80998-8
  - NIST-800-53-CM-6(b)
  - NIST-800-171-3.1.3
  - NIST-800-171-3.4.7
  - DISA-STIG-RHEL-07-040520

- name: Enable service auditd
  block:
  - name: Gather the package facts
    package_facts:
      manager: auto
  - name: Enable service auditd
    service:
      name: auditd
      enabled: 'yes'
      state: started
    when:
    - '"audit" in ansible_facts.packages'
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - high_severity | bool
  - enable_strategy | bool
  - service_auditd_enabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_auditd_enabled
  - high_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27407-6
  - NIST-800-53-AC-2(g)
  - NIST-800-53-AU-3
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12(a)
  - NIST-800-53-AU-12(c)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-IR-5
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1
  - NIST-800-171-3.3.2
  - NIST-800-171-3.3.6
  - PCI-DSS-Req-10.1
  - CJIS-5.4.1.1
  - DISA-STIG-RHEL-07-030000

- name: check audit_backlog_limit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit_backlog_limit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82156-1

- name: replace existing audit_backlog_limit argument
  replace:
    path: /etc/default/grub
    regexp: audit_backlog_limit=.
    replace: audit_backlog_limit=8192
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82156-1

- name: add audit_backlog_limit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit_backlog_limit=8192"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82156-1

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit_backlog_limit=8192"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_backlog_limit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_backlog_limit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-82156-1

- name: check audit argument exists
  command: grep 'GRUB_CMDLINE_LINUX.*audit=' /etc/default/grub
  failed_when: false
  register: argcheck
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: replace existing audit argument
  replace:
    path: /etc/default/grub
    regexp: audit=.
    replace: audit=1
  when:
  - argcheck.rc == 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: add audit argument
  replace:
    path: /etc/default/grub
    regexp: (GRUB_CMDLINE_LINUX=.*)"
    replace: \1 audit=1"
  when:
  - argcheck.rc != 0
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: update bootloader menu
  command: /sbin/grubby --update-kernel=ALL --args="audit=1"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_audit_argument | bool
  - restrict_strategy | bool
  - reboot_required | bool
  - medium_severity | bool
  - medium_complexity | bool
  - low_disruption | bool
  tags:
  - grub2_audit_argument
  - medium_severity
  - restrict_strategy
  - medium_complexity
  - low_disruption
  - reboot_required
  - CCE-27212-0
  - NIST-800-53-AC-17(1)
  - NIST-800-53-AU-14(1)
  - NIST-800-53-AU-1(b)
  - NIST-800-53-AU-2(a)
  - NIST-800-53-AU-2(c)
  - NIST-800-53-AU-2(d)
  - NIST-800-53-AU-10
  - NIST-800-53-AU-12
  - NIST-800-53-IR-5
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1
  - PCI-DSS-Req-10.3
  - CJIS-5.4.1.1

- name: Configure auditd Flush Priority
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: ^\s*flush\s*=\s*.*$
    line: flush = {{ var_auditd_flush }}
    state: present
    create: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - auditd_data_retention_flush | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - auditd_data_retention_flush
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27331-8
  - NIST-800-53-AU-9
  - NIST-800-53-AU-12(1)
  - NIST-800-171-3.3.1

- name: Unit Service Exists - debug-shell.service
  command: systemctl list-unit-files debug-shell.service
  args:
    warn: false
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80206-6
  - NIST-800-171-3.4.5

- name: Disable service debug-shell
  systemd:
    name: debug-shell.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"debug-shell.service" in service_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80206-6
  - NIST-800-171-3.4.5

- name: Unit Socket Exists - debug-shell.socket
  command: systemctl list-unit-files debug-shell.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80206-6
  - NIST-800-171-3.4.5

- name: Disable socket debug-shell
  systemd:
    name: debug-shell.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"debug-shell.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_debug-shell_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80206-6
  - NIST-800-171-3.4.5

- name: Disable Ctrl-Alt-Del Reboot Activation
  systemd:
    name: ctrl-alt-del.target
    masked: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - disable_ctrlaltdel_reboot | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_ctrlaltdel_reboot
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27511-5
  - NIST-800-53-AC-6
  - NIST-800-171-3.4.5
  - DISA-STIG-RHEL-07-020230

- name: Verify that Interactive Boot is Disabled in /etc/default/grub
  replace:
    dest: /etc/default/grub
    regexp: systemd.confirm_spawn=(1|yes|true|on)
    replace: systemd.confirm_spawn=no
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27335-9
  - NIST-800-53-SC-2
  - NIST-800-53-AC-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: Verify that Interactive Boot is Disabled (runtime)
  command: /sbin/grubby --update-kernel=ALL --remove-args="systemd.confirm_spawn"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - grub2_disable_interactive_boot | bool
  - reboot_required | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - grub2_disable_interactive_boot
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - reboot_required
  - CCE-27335-9
  - NIST-800-53-SC-2
  - NIST-800-53-AC-3
  - NIST-800-171-3.1.2
  - NIST-800-171-3.4.5

- name: require single user mode password
  lineinfile:
    create: true
    dest: /usr/lib/systemd/system/rescue.service
    regexp: ^#?ExecStart=
    line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - require_singleuser_auth | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - require_singleuser_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27287-2
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(1)
  - NIST-800-53-AC-3
  - NIST-800-171-3.1.1
  - NIST-800-171-3.4.5
  - DISA-STIG-RHEL-07-010481

- name: Disable Ctrl-Alt-Del Burst Action
  lineinfile:
    dest: /etc/systemd/system.conf
    state: present
    regexp: ^CtrlAltDelBurstAction
    line: CtrlAltDelBurstAction=none
    create: true
  tags:
  - disable_ctrlaltdel_burstaction
  - high_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80449-2
  - NIST-800-53-AC-6
  - NIST-800-171-3.4.5
  when:
  - disable_strategy | bool
  - no_reboot_needed | bool
  - disable_ctrlaltdel_burstaction | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure screen is installed
  package:
    name: screen
    state: present
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - package_screen_installed | bool
  - no_reboot_needed | bool
  - medium_severity | bool
  - enable_strategy | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - package_screen_installed
  - medium_severity
  - enable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27351-6
  - NIST-800-53-AC-11(a)
  - NIST-800-171-3.1.10
  - DISA-STIG-RHEL-07-010090

- name: Limit the Number of Concurrent Login Sessions Allowed Per User
  lineinfile:
    state: present
    dest: /etc/security/limits.conf
    insertbefore: ^# End of file
    regexp: ^#?\*.*maxlogins
    line: '*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions }}'
    create: true
  tags:
  - accounts_max_concurrent_login_sessions
  - low_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82041-5
  - NIST-800-53-AC-10
  - CJIS-5.5.2.2
  - DISA-STIG-RHEL-07-040000
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_max_concurrent_login_sessions | bool
  - low_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/bashrc
  replace:
    path: /etc/bashrc
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_bashrc
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80202-5
  - NIST-800-53-SA-8
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_bashrc | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/profile
  replace:
    path: /etc/profile
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_profile
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80204-1
  - NIST-800-53-SA-8
  when:
  - unknown_severity | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_umask_etc_profile | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set user umask in /etc/csh.cshrc
  replace:
    path: /etc/csh.cshrc
    regexp: umask.*
    replace: umask {{ var_accounts_user_umask }}
  tags:
  - accounts_umask_etc_csh_cshrc
  - unknown_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80203-3
  - NIST-800-53-SA-8
  when:
  - unknown_severity | bool
  - accounts_umask_etc_csh_cshrc | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable maxrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxrepeat
    line: maxrepeat = {{ var_password_pam_maxrepeat }}
  tags:
  - accounts_password_pam_maxrepeat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82055-5
  - NIST-800-53-IA-5
  - NIST-800-53-IA-5(c)
  - DISA-STIG-RHEL-07-010180
  when:
  - accounts_password_pam_maxrepeat | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*dcredit
    line: dcredit = {{ var_password_pam_dcredit }}
  tags:
  - accounts_password_pam_dcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27214-6
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-194
  - PCI-DSS-Req-8.2.3
  - DISA-STIG-RHEL-07-010140
  when:
  - accounts_password_pam_dcredit | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*lcredit
    line: lcredit = {{ var_password_pam_lcredit }}
  tags:
  - accounts_password_pam_lcredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27345-8
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - PCI-DSS-Req-8.2.3
  - DISA-STIG-RHEL-07-010130
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_lcredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ocredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ocredit
    line: ocredit = {{ var_password_pam_ocredit }}
  tags:
  - accounts_password_pam_ocredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27360-7
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - DISA-STIG-RHEL-07-010150
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ocredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*minlen
    line: minlen = {{ var_password_pam_minlen }}
  tags:
  - accounts_password_pam_minlen
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27293-0
  - NIST-800-53-IA-5(1)(a)
  - PCI-DSS-Req-8.2.3
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010280
  when:
  - accounts_password_pam_minlen | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable difok is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*difok
    line: difok = {{ var_password_pam_difok }}
  tags:
  - accounts_password_pam_difok
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82020-9
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(b)
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010160
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_difok | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable maxclassrepeat is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*maxclassrepeat
    line: maxclassrepeat = {{ var_password_pam_maxclassrepeat }}
  tags:
  - accounts_password_pam_maxclassrepeat
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27512-3
  - NIST-800-53-IA-5
  - NIST-800-53-IA-5(c)
  - DISA-STIG-RHEL-07-010190
  when:
  - accounts_password_pam_maxclassrepeat | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: true
    dest: /etc/security/pwquality.conf
    regexp: ^#?\s*ucredit
    line: ucredit = {{ var_password_pam_ucredit }}
  tags:
  - accounts_password_pam_ucredit
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27200-5
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - PCI-DSS-Req-8.2.3
  - DISA-STIG-RHEL-07-010120
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - accounts_password_pam_ucredit | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_unlock_time
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-26884-7
  - NIST-800-53-AC-7(b)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.7
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_unlock_time | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail deny={{ var_accounts_passwords_pam_faillock_deny }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_deny
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27350-8
  - NIST-800-53-AC-7(a)
  - NIST-800-171-3.1.8
  - PCI-DSS-Req-8.1.6
  - CJIS-5.5.3
  - DISA-STIG-RHEL-07-010320
  when:
  - accounts_passwords_pam_faillock_deny | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock preauth fail_interval before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27297-1
  - NIST-800-53-AC-7(a)
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock preauth
  pamd:
    name: '{{ item }}'
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: preauth silent fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27297-1
  - NIST-800-53-AC-7(a)
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: after
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27297-1
  - NIST-800-53-AC-7(a)
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add fail_interval argument to auth pam_faillock authfail
  pamd:
    name: '{{ item }}'
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: authfail fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}
    state: args_present
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27297-1
  - NIST-800-53-AC-7(a)
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
  - system-auth
  - password-auth
  tags:
  - accounts_passwords_pam_faillock_interval
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27297-1
  - NIST-800-53-AC-7(a)
  - DISA-STIG-RHEL-07-010320
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - accounts_passwords_pam_faillock_interval | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (change)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$
    replace: \g<1>{{ var_password_pam_unix_remember }}\g<3>
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-82030-8
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010270
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Do not allow users to reuse recent passwords - system-auth (add)
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: ^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$
    replace: \g<0> remember={{ var_password_pam_unix_remember }}
  tags:
  - accounts_password_pam_unix_remember
  - medium_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-82030-8
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(e)
  - NIST-800-171-3.5.8
  - PCI-DSS-Req-8.2.5
  - CJIS-5.6.2.1.1
  - DISA-STIG-RHEL-07-010270
  when:
  - no_reboot_needed | bool
  - configure_strategy | bool
  - medium_severity | bool
  - medium_disruption | bool
  - accounts_password_pam_unix_remember | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: /etc/pam.d/system-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-27286-4
  - NIST-800-53-AC-6
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  - DISA-STIG-RHEL-07-010290
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: /etc/pam.d/password-auth
    follow: true
    regexp: nullok
  tags:
  - no_empty_passwords
  - high_severity
  - configure_strategy
  - low_complexity
  - medium_disruption
  - no_reboot_needed
  - CCE-27286-4
  - NIST-800-53-AC-6
  - NIST-800-53-IA-5(b)
  - NIST-800-53-IA-5(c)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - PCI-DSS-Req-8.2.3
  - CJIS-5.5.2
  - DISA-STIG-RHEL-07-010290
  when:
  - no_empty_passwords | bool
  - no_reboot_needed | bool
  - high_severity | bool
  - configure_strategy | bool
  - medium_disruption | bool
  - low_complexity | bool

- name: Restrict Virtual Console Root Logins
  lineinfile:
    dest: /etc/securetty
    regexp: ^vc
    state: absent
  tags:
  - securetty_root_login_console_only
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27318-5
  - NIST-800-53-AC-6(2)
  - NIST-800-53-IA-2
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  when:
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - securetty_root_login_console_only | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Set Password Minimum Length in login.defs
  lineinfile:
    dest: /etc/login.defs
    regexp: ^PASS_MIN_LEN *[0-9]*
    state: present
    line: PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}
    create: true
  tags:
  - accounts_password_minlen_login_defs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-82049-8
  - NIST-800-53-IA-5(f)
  - NIST-800-53-IA-5(1)(a)
  - NIST-800-171-3.5.7
  - CJIS-5.6.2.1
  when:
  - accounts_password_minlen_login_defs | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Ensure abrt is removed
  package:
    name: abrt
    state: absent
  tags:
  - package_abrt_removed
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-81040-8
  when:
  - disable_strategy | bool
  - package_abrt_removed | bool
  - medium_severity | bool
  - no_reboot_needed | bool
  - low_disruption | bool
  - low_complexity | bool

- name: Unit Service Exists - kdump.service
  command: systemctl list-unit-files kdump.service
  args:
    warn: false
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80258-7
  - NIST-800-53-AC-17(8)
  - NIST-800-53-CM-7
  - NIST-800-53-CM-6(b)
  - DISA-STIG-RHEL-07-021300

- name: Disable service kdump
  systemd:
    name: kdump.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"kdump.service" in service_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80258-7
  - NIST-800-53-AC-17(8)
  - NIST-800-53-CM-7
  - NIST-800-53-CM-6(b)
  - DISA-STIG-RHEL-07-021300

- name: Unit Socket Exists - kdump.socket
  command: systemctl list-unit-files kdump.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80258-7
  - NIST-800-53-AC-17(8)
  - NIST-800-53-CM-7
  - NIST-800-53-CM-6(b)
  - DISA-STIG-RHEL-07-021300

- name: Disable socket kdump
  systemd:
    name: kdump.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_kdump_disabled | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_kdump_disabled
  - medium_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80258-7
  - NIST-800-53-AC-17(8)
  - NIST-800-53-CM-7
  - NIST-800-53-CM-6(b)
  - DISA-STIG-RHEL-07-021300

- name: Disable Kerberos Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*KerberosAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: KerberosAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_kerb_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_kerb_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80221-5
  - NIST-800-53-CM-6(c)
  - NIST-800-171-3.1.12
  - DISA-STIG-RHEL-07-040440

- name: Disable SSH Root Login
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitRootLogin\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitRootLogin no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_root_login | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_root_login
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27445-6
  - NIST-800-53-AC-3
  - NIST-800-53-AC-6(2)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-IA-2
  - NIST-800-53-IA-2(5)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040370

- name: Disable Host-Based Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*HostbasedAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: HostbasedAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - disable_host_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - disable_host_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27413-4
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(a)
  - NIST-800-53-CM-6(b)
  - NIST-800-171-3.1.12
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010470

- name: Set SSH Idle Timeout Interval
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveInterval\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveInterval {{ sshd_idle_timeout_value }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_set_idle_timeout | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_idle_timeout
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27433-2
  - NIST-800-53-AC-2(5)
  - NIST-800-53-SA-8(i)
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-SC-10
  - NIST-800-171-3.1.11
  - PCI-DSS-Req-8.1.8
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040320

- name: Enable Use of Strict Mode Checking
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*StrictModes\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: StrictModes yes
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - sshd_enable_strictmodes | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_strictmodes
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80222-3
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.12
  - DISA-STIG-RHEL-07-040450

- name: Disable GSSAPI Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*GSSAPIAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: GSSAPIAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_disable_gssapi_auth | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_gssapi_auth
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80220-7
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(c)
  - NIST-800-171-3.1.12
  - DISA-STIG-RHEL-07-040430

- name: Use Only FIPS 140-2 Validated MACs
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*MACs\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: MACs {{ sshd_approved_macs }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_use_approved_macs | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_approved_macs
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27455-5
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-IA-7
  - NIST-800-53-SC-13
  - NIST-800-53-MA-4(6)
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - DISA-STIG-RHEL-07-040400

- name: Use Only FIPS 140-2 Validated Ciphers
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Ciphers\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_use_approved_ciphers | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_use_approved_ciphers
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27295-5
  - NIST-800-53-AC-3
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-AC-17(2)
  - NIST-800-53-AU-10(5)
  - NIST-800-53-CM-6(b)
  - NIST-800-53-IA-5(1)(c)
  - NIST-800-53-IA-7
  - NIST-800-53-SI-7
  - NIST-800-53-SC-13
  - NIST-800-171-3.1.13
  - NIST-800-171-3.13.11
  - NIST-800-171-3.13.8
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040110

- name: Disable SSH Access via Empty Passwords
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*PermitEmptyPasswords\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: PermitEmptyPasswords no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - sshd_disable_empty_passwords | bool
  - high_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_empty_passwords
  - high_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27471-2
  - NIST-800-53-AC-3
  - NIST-800-53-AC-6
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-CM-6(b)
  - NIST-800-171-3.1.1
  - NIST-800-171-3.1.5
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-010300

- name: Set SSH Client Alive Max Count
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*ClientAliveCountMax\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - sshd_set_keepalive | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_set_keepalive
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27082-7
  - NIST-800-53-AC-2(5)
  - NIST-800-53-SA-8
  - NIST-800-53-AC-12
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-53-SC-10
  - NIST-800-171-3.1.11
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040340

- name: Enable SSH Warning Banner
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*Banner\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: Banner /etc/issue
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_enable_warning_banner | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_enable_warning_banner
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-27314-4
  - NIST-800-53-AC-8(a)
  - NIST-800-53-AC-8(b)
  - NIST-800-53-AC-8(c)(1)
  - NIST-800-53-AC-8(c)(2)
  - NIST-800-53-AC-8(c)(3)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.9
  - CJIS-5.5.6
  - DISA-STIG-RHEL-07-040170

- name: Disable SSH Support for Rhosts RSA Authentication
  block:
  - name: Deduplicate values from /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: false
      regexp: (?i)^\s*RhostsRSAAuthentication\s+
      state: absent
  - name: Insert correct line to /etc/ssh/sshd_config
    lineinfile:
      path: /etc/ssh/sshd_config
      create: true
      line: RhostsRSAAuthentication no
      state: present
      insertbefore: ^[#\s]*Match
      validate: /usr/sbin/sshd -t -f %s
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - sshd_disable_rhosts_rsa | bool
  - no_reboot_needed | bool
  - restrict_strategy | bool
  - medium_severity | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - sshd_disable_rhosts_rsa
  - medium_severity
  - restrict_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80373-4
  - NIST-800-53-CM-6(a)
  - NIST-800-53-AC-17(a)
  - NIST-800-53-AC-17(b)
  - NIST-800-171-3.1.12
  - DISA-STIG-RHEL-07-040330

- name: Unit Service Exists - rpcbind.service
  command: systemctl list-unit-files rpcbind.service
  args:
    warn: false
  register: service_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6

- name: Disable service rpcbind
  systemd:
    name: rpcbind.service
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rpcbind.service" in service_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6

- name: Unit Socket Exists - rpcbind.socket
  command: systemctl list-unit-files rpcbind.socket
  args:
    warn: false
  register: socket_file_exists
  changed_when: false
  ignore_errors: true
  when:
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6

- name: Disable socket rpcbind
  systemd:
    name: rpcbind.socket
    enabled: 'no'
    state: stopped
    masked: 'yes'
  when:
  - '"rpcbind.socket" in socket_file_exists.stdout_lines[1]'
  - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
  - unknown_severity | bool
  - disable_strategy | bool
  - no_reboot_needed | bool
  - service_rpcbind_disabled | bool
  - low_disruption | bool
  - low_complexity | bool
  tags:
  - service_rpcbind_disabled
  - unknown_severity
  - disable_strategy
  - low_complexity
  - low_disruption
  - no_reboot_needed
  - CCE-80230-6
